// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var count, counter, counterInterval, counterWrapper, digit, generateDigit, ip, pad, parseIP, parseNum, part, toBoolean, _i, _len;
    ip = '192.168.1.50';
    parseIP = function(ip) {
      var parts;
      return parts = ip.split('.').map(function(i) {
        return parseNum(i);
      });
    };
    parseNum = function(num) {
      return pad(parseInt(num).toString(2), 8);
    };
    pad = function(s, l) {
      var gap;
      gap = l - s.length + 1;
      while (gap -= 1) {
        s = "0" + s;
      }
      return s;
    };
    toBoolean = function(b) {
      return b === '1' || b === 1;
    };
    generateDigit = function(num, digit) {
      var bit, box, _i, _results;
      _results = [];
      for (bit = _i = 0; _i <= 7; bit = ++_i) {
        box = $("<div class='box'></div>");
        if (toBoolean(num[bit])) {
          box.addClass('on');
        }
        _results.push(digit.append(box));
      }
      return _results;
    };
    console.log('hey');
    for (_i = 0, _len = parsedIP.length; _i < _len; _i++) {
      part = parsedIP[_i];
      digit = $("<div class='digit'></div>");
      $('body').append(digit);
      generateDigit(part, digit);
    }
    counterWrapper = $("<div class='digit counter'></div>");
    counter = 0;
    counterInterval = setInterval(function(){count()}, 100);
    count = function() {
      counterWrapper.empty();
      generateDigit(parseNum(counter), counterWrapper);
      if (counter === 255) {
        clearInterval(counterInterval);
      }
      return counter++;
    };
    return $('body').append(counterWrapper);
  });

}).call(this);
